diff --git a/gtk-window-decorator/gtk-window-decorator.c b/gtk-window-decorator/gtk-window-decorator.c
index e3203f65..8f1b643a 100644
--- a/gtk-window-decorator/gtk-window-decorator.c
+++ b/gtk-window-decorator/gtk-window-decorator.c
@@ -408,6 +408,7 @@ typedef struct _decor {
     gint	      client_width;
     gint	      client_height;
     gint	      qubes_label;
+    gchar	      *qubes_name;
     gboolean	      decorated;
     gboolean	      active;
     PangoLayout	      *layout;
@@ -1077,6 +1078,47 @@ static int get_qubes_label (Window win)
     return QUBES_LABEL_DOM0;
 }
 
+static gchar * get_qubes_name(Window win)
+{
+    GdkDisplay  *gdkdisplay = gdk_display_get_default ();
+    Display	*xdisplay = gdk_x11_display_get_xdisplay (gdkdisplay);
+    Atom	atom_label;
+    gchar	*name = NULL;
+
+    atom_label = XInternAtom(xdisplay, "_QUBES_VMNAME", TRUE);
+
+    if (atom_label != 0)
+    {
+	Atom actual_type;
+        int actual_format;
+        unsigned long nitems = 0, bytes_left;
+        char *data = 0;
+
+        if ((XGetWindowProperty (xdisplay, win, atom_label, 0L, 0L,
+                        FALSE, AnyPropertyType, &actual_type, &actual_format, &nitems,
+                        &bytes_left, (unsigned char **) &data) == Success))
+        {
+            if (bytes_left > 0)
+	    {
+	        if ((XGetWindowProperty (xdisplay, win, atom_label, 0L, bytes_left,
+                        FALSE, AnyPropertyType, &actual_type, &actual_format, &nitems,
+                        &bytes_left, (unsigned char **) &data) == Success))
+		{
+			name = g_strdup_printf (_("[%s] "), data);
+		}
+		else
+		{
+			name = g_strdup (_("[ERROR Reading VM name?!] "));
+		}
+		return name;
+	    }
+	}
+    }
+
+    name = g_strdup("[Dom0] ");
+    return name;
+}
+
 static void
 draw_window_decoration (decor_t *d)
 {
@@ -3670,7 +3712,6 @@ update_window_decoration_name (WnckWindow *win)
 	d->name = NULL;
     }
 
-    name = wnck_window_get_name (win);
     if (!d->layout)
     {
 	d->layout = pango_layout_new (pango_context);
@@ -3681,6 +3722,8 @@ update_window_decoration_name (WnckWindow *win)
 	pango_layout_set_alignment(d->layout, PANGO_ALIGN_CENTER);
     }
 
+    name = g_strconcat(d->qubes_name, wnck_window_get_name(win), NULL);
+
     if (name && (name_length = strlen (name)))
     {
 	gint w;
@@ -4127,7 +4170,7 @@ update_switcher_window (WnckWindow *win,
 	    d->name = NULL;
 	}
 
-	name = wnck_window_get_name (selected_win);
+	name = g_strconcat(get_qubes_name(wnck_window_get_xid(selected_win)), wnck_window_get_name(selected_win), NULL);
 	if (name && (name_length = strlen (name)))
 	{
 	    if (!d->layout)
@@ -4264,6 +4307,12 @@ remove_frame_window (WnckWindow *win)
 	d->name = NULL;
     }
 
+    if (d->qubes_name)
+    {
+	g_free (d->qubes_name);
+	d->qubes_name = NULL;
+    }
+
     if (d->layout)
     {
 	g_object_unref (G_OBJECT (d->layout));
@@ -4451,8 +4500,9 @@ window_opened (WnckScreen *screen,
     wnck_window_get_client_window_geometry (win, NULL, NULL,
 					    &d->client_width,
 					    &d->client_height);
-    //qubes label
+    //qubes values
     d->qubes_label = get_qubes_label(wnck_window_get_xid(win));
+    d->qubes_name = get_qubes_name(wnck_window_get_xid(win));
 
     d->draw = theme_draw_window_decoration;
 
-- 
2.21.1

